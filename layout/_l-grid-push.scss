/* ======================================================================================
   @LAYOUT -> GRID -> PUSH
   ====================================================================================== */


/**
 * Push grid items over to the left by certain amounts.
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/cjyHK/
 *
 * @credit
 * https://github.com/csswizardry/csswizardry-grids/blob/master/csswizardry-grids.scss
 */


@mixin push-classes($namespace: null) {

	/**
	 * Whole.
	 */

	.l-#{$namespace}push-one-whole {left: $one-whole;}


	/**
	 * Halves.
	 */

	.l-#{$namespace}push-one-half {left: $one-half;}


	/**
	 * Thirds.
	 */

	.l-#{$namespace}push-one-third {left: $one-third;}
	.l-#{$namespace}push-two-thirds {left: $two-thirds;}


	/**
	 * Quarters.
	 */

	.l-#{$namespace}push-one-quarter {left: $one-quarter;}
	.l-#{$namespace}push-two-quarters {left: $one-half;}
	.l-#{$namespace}push-three-quarters {left: $three-quarters;}


	/**
	 * Fifths.
	 */

	.l-#{$namespace}push-one-fifth {left: $one-fifth;}
	.l-#{$namespace}push-two-fifths {left: $two-fifths;}
	.l-#{$namespace}push-three-fifths {left: $three-fifths;}
	.l-#{$namespace}push-four-fifths {left: $four-fifths;}


	/**
	 * Sixths.
	 */

	.l-#{$namespace}push-one-sixth {left: $one-sixth;}
	.l-#{$namespace}push-two-sixths {left: $one-third;}
	.l-#{$namespace}push-three-sixths {left: $one-half;}
	.l-#{$namespace}push-four-sixths {left: $two-thirds;}
	.l-#{$namespace}push-five-sixths {left: $five-sixths;}


	/**
	 * Sevenths.
	 */

  .l-#{$namespace}push-one-seventh {left: $one-seventh;}
  .l-#{$namespace}push-two-sevenths {left: $two-sevenths;}
  .l-#{$namespace}push-three-sevenths {left: $three-sevenths;}
  .l-#{$namespace}push-four-sevenths {left: $four-sevenths;}
  .l-#{$namespace}push-five-sevenths {left: $five-sevenths;}
  .l-#{$namespace}push-six-sevenths {left: $six-sevenths;}


	/**
	 * Eighths.
	 */

	.l-#{$namespace}push-one-eighth {left: $one-eighth;}
	.l-#{$namespace}push-two-eighths {left: $one-quarter;}
	.l-#{$namespace}push-three-eighths {left: $three-eighths;}
	.l-#{$namespace}push-four-eighths {left: $one-half;}
	.l-#{$namespace}push-five-eighths {left: $five-eighths;}
	.l-#{$namespace}push-six-eighths {left: $three-quarters;}
	.l-#{$namespace}push-seven-eighths {left: $seven-eighths;}


	/**
	 * Tenths.
	 */

	.l-#{$namespace}push-one-tenth {left: $one-tenth;}
	.l-#{$namespace}push-two-tenths {left: $one-fifth;}
	.l-#{$namespace}push-three-tenths {left: $three-tenths;}
	.l-#{$namespace}push-four-tenths {left: $two-fifths;}
	.l-#{$namespace}push-five-tenths {left: $one-half;}
	.l-#{$namespace}push-six-tenths {left: $three-fifths;}
	.l-#{$namespace}push-seven-tenths {left: $seven-tenths;}
	.l-#{$namespace}push-eight-tenths {left: $four-fifths;}
	.l-#{$namespace}push-nine-tenths {left: $nine-tenths;}


	/**
	 * Twelfths.
	 */

	.l-#{$namespace}push-one-twelfth {left: $one-twelfth;}
	.l-#{$namespace}push-two-twelfths {left: $one-sixth;}
	.l-#{$namespace}push-three-twelfths {left: $one-quarter;}
	.l-#{$namespace}push-four-twelfths {left: $one-third;}
	.l-#{$namespace}push-five-twelfths {left: $five-twelfths;}
	.l-#{$namespace}push-six-twelfths {left: $one-half;}
	.l-#{$namespace}push-seven-twelfths {left: $seven-twelfths;}
	.l-#{$namespace}push-eight-twelfths {left: $two-thirds;}
	.l-#{$namespace}push-nine-twelfths {left: $three-quarters;}
	.l-#{$namespace}push-ten-twelfths {left: $five-sixths;}
	.l-#{$namespace}push-eleven-twelfths {left: $eleven-twelfths;}
}


@if $grid-push {

	/**
	 * Every grid item that needs to be pushed needs this selector.
	 */

	.grid__item--push {position: relative;}


	/**
	 * Output all the push classes.
	 */

	@include push-classes();


	/**
	 * Output at specific breakpoints e.g. `.l-lap-push-one-half`.
	 *
	 * N.B. manage what you want to use in 'Core -> Settings -> Toggles'.
	 */


	/**
	 * Lap and up.
	 */

	@if $grid-push-classes-at-breakpoint-lap {
	  @include respond-min(641) {
	    @include push-classes("lap-");
	  }
	}// endif


	/**
	 * Lap range.
	 */

	@if $grid-push-classes-at-breakpoint-lap-range {
	  @include respond-range-fixed(lap) {
	    @include push-classes("lap-range-");
	  }
	}// endif


	/**
	 * Lap large and up.
	 */

	@if $grid-push-classes-at-breakpoint-lap-large {
	  @include respond-min(901) {
	    @include push-classes("lap-large-");
	  }
	}// endif


	/**
	 * Lap large range.
	 */

	@if $grid-push-classes-at-breakpoint-lap-large-range {
	  @include respond-range-fixed(lap-large) {
	    @include push-classes("lap-large-range-");
	  }
	}// endif


	/**
	 * Desk and up.
	 */

	@if $grid-push-classes-at-breakpoint-desk {
	  @include respond-min(1200) {
	    @include push-classes("desk-");
	  }
	}// endif


	/**
	 * Desk small range.
	 */

	@if $grid-push-classes-at-breakpoint-desk-small-range {
	  @include respond-range-fixed(desk-small) {
	    @include push-classes("desk-small-range-");
	  }
	}// endif


	/**
	 * Desk large.
	 */

	@if $grid-push-classes-at-breakpoint-desk-large {
	  @include respond-min(1366) {
	    @include push-classes("desk-large-");
	  }
	}// endif

}
// endif