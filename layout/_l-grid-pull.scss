/* ============================================================================
   @LAYOUT -> GRID -> PULL
   ========================================================================= */


/**
 * Pull grid items over to the right by certain amounts.
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/cjyHK/
 *
 * @credit
 * https://github.com/csswizardry/csswizardry-grids/blob/master/csswizardry-
 * grids.scss
 */


/**
 * Settings.
 */

// Turned off by default as this generates a lot of CSS
$grid-pull: false !default;

// Apply pull classes at specific breakpoints
//
// N.B. by default we're turning on Lap plus (non-palm)
$grid-pull-classes-at-breakpoint-lap:                 true !default;

$grid-pull-classes-at-breakpoint-lap-range:           false !default;

$grid-pull-classes-at-breakpoint-lap-large:           false !default;

$grid-pull-classes-at-breakpoint-lap-large-range:     false !default;

$grid-pull-classes-at-breakpoint-desk:                false !default;

$grid-pull-classes-at-breakpoint-desk-small-range:    false !default;

$grid-pull-classes-at-breakpoint-desk-large:          false !default;


/**
 * Generate all the pull classes.
 */

@mixin pull-classes($namespace: null) {

	/**
	 * Whole.
	 */

	.l-#{$namespace}pull-one-whole {right: $one-whole;}


	/**
	 * Halves.
	 */

	.l-#{$namespace}pull-one-half {right: $one-half;}


	/**
	 * Thirds.
	 */

	.l-#{$namespace}pull-one-third {right: $one-third;}

	.l-#{$namespace}pull-two-thirds {right: $two-thirds;}


	/**
	 * Quarters.
	 */

	.l-#{$namespace}pull-one-quarter {right: $one-quarter;}

	.l-#{$namespace}pull-two-quarters {right: $one-half;}

	.l-#{$namespace}pull-three-quarters {right: $three-quarters;}


	/**
	 * Fifths.
	 */

	.l-#{$namespace}pull-one-fifth {right: $one-fifth;}

	.l-#{$namespace}pull-two-fifths {right: $two-fifths;}

	.l-#{$namespace}pull-three-fifths {right: $three-fifths;}

	.l-#{$namespace}pull-four-fifths {right: $four-fifths;}


	/**
	 * Sixths.
	 */

	.l-#{$namespace}pull-one-sixth {right: $one-sixth;}

	.l-#{$namespace}pull-two-sixths {right: $one-third;}

	.l-#{$namespace}pull-three-sixths {right: $one-half;}

	.l-#{$namespace}pull-four-sixths {right: $two-thirds;}

	.l-#{$namespace}pull-five-sixths {right: $five-sixths;}


	/**
	 * Sevenths.
	 */

  .l-#{$namespace}pull-one-seventh {right: $one-seventh;}

  .l-#{$namespace}pull-two-sevenths {right: $two-sevenths;}

  .l-#{$namespace}pull-three-sevenths {right: $three-sevenths;}

  .l-#{$namespace}pull-four-sevenths {right: $four-sevenths;}

  .l-#{$namespace}pull-five-sevenths {right: $five-sevenths;}

  .l-#{$namespace}pull-six-sevenths {right: $six-sevenths;}


	/**
	 * Eighths.
	 */

	.l-#{$namespace}pull-one-eighth {right: $one-eighth;}

	.l-#{$namespace}pull-two-eighths {right: $one-quarter;}

	.l-#{$namespace}pull-three-eighths {right: $three-eighths;}

	.l-#{$namespace}pull-four-eighths {right: $one-half;}

	.l-#{$namespace}pull-five-eighths {right: $five-eighths;}

	.l-#{$namespace}pull-six-eighths {right: $three-quarters;}

	.l-#{$namespace}pull-seven-eighths {right: $seven-eighths;}


	/**
	 * Tenths.
	 */

	.l-#{$namespace}pull-one-tenth {right: $one-tenth;}

	.l-#{$namespace}pull-two-tenths {right: $one-fifth;}

	.l-#{$namespace}pull-three-tenths {right: $three-tenths;}

	.l-#{$namespace}pull-four-tenths {right: $two-fifths;}

	.l-#{$namespace}pull-five-tenths {right: $one-half;}

	.l-#{$namespace}pull-six-tenths {right: $three-fifths;}

	.l-#{$namespace}pull-seven-tenths {right: $seven-tenths;}

	.l-#{$namespace}pull-eight-tenths {right: $four-fifths;}

	.l-#{$namespace}pull-nine-tenths {right: $nine-tenths;}


	/**
	 * Twelfths.
	 */

	.l-#{$namespace}pull-one-twelfth {right: $one-twelfth;}

	.l-#{$namespace}pull-two-twelfths {right: $one-sixth;}

	.l-#{$namespace}pull-three-twelfths {right: $one-quarter;}

	.l-#{$namespace}pull-four-twelfths {right: $one-third;}

	.l-#{$namespace}pull-five-twelfths {right: $five-twelfths;}

	.l-#{$namespace}pull-six-twelfths {right: $one-half;}

	.l-#{$namespace}pull-seven-twelfths {right: $seven-twelfths;}

	.l-#{$namespace}pull-eight-twelfths {right: $two-thirds;}

	.l-#{$namespace}pull-nine-twelfths {right: $three-quarters;}

	.l-#{$namespace}pull-ten-twelfths {right: $five-sixths;}

	.l-#{$namespace}pull-eleven-twelfths {right: $eleven-twelfths;}
}


@if $grid-pull {

	/**
	 * Every grid item that needs to be pulled needs this selector.
	 */

	.grid__item--pull {position: relative;}


	/**
	 * Output all the pull classes.
	 */

	@include pull-classes();


	/**
	 * Output at specific breakpoints e.g. `.l-lap-pull-one-half`.
	 */


	/**
	 * Lap and up.
	 */

	@if $grid-pull-classes-at-breakpoint-lap {
	  @include respond-to(lap) {
	    @include pull-classes("lap-");
	  }
	}// endif


	/**
	 * Lap range.
	 */

	@if $grid-pull-classes-at-breakpoint-lap-range {
	  @include respond-range(lap) {
	    @include pull-classes("lap-range-");
	  }
	}// endif


	/**
	 * Lap large and up.
	 */

	@if $grid-pull-classes-at-breakpoint-lap-large {
	  @include respond-to(lap-large) {
	    @include pull-classes("lap-large-");
	  }
	}// endif


	/**
	 * Lap large range.
	 */

	@if $grid-pull-classes-at-breakpoint-lap-large-range {
	  @include respond-range(lap-large) {
	    @include pull-classes("lap-large-range-");
	  }
	}// endif


	/**
	 * Desk and up.
	 */

	@if $grid-pull-classes-at-breakpoint-desk {
	  @include respond-to(desk) {
	    @include pull-classes("desk-");
	  }
	}// endif


	/**
	 * Desk small range.
	 */

	@if $grid-pull-classes-at-breakpoint-desk-small-range {
	  @include respond-range(desk) {
	    @include pull-classes("desk-small-range-");
	  }
	}// endif


	/**
	 * Desk large.
	 */

	@if $grid-pull-classes-at-breakpoint-desk-large {
	  @include respond-to(desk-large) {
	    @include pull-classes("desk-large-");
	  }
	}// endif

}
// endif