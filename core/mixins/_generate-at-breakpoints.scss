/* ============================================================================
   @CORE -> MIXINS -> GENERATE AT BREAKPOINTS
   ========================================================================= */


/**
 * Generate classes which apply styling at different breakpoints which is fed
 * from the breakpoints defined here: Core -> Settings -> Breakpoints. The
 * format of the generated class is:
 *
   .[class-selector]-at-[breakpoint]
 *
 * E.g.
 *
   .u-list-inline-at-lap
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/Bcfyz
 *
 * @example
   @include generate-at-breakpoints('.u-text-size-small', all) {
     @include font-size($font-size-small);
   }

   @include generate-at-breakpoints('.u-demo{bp} li', palm lap, false) {
     vertical-align: top;
   }

   @include generate-at-breakpoints('.u-position-fixed', (400 max, 401 min, desk max)) {
     position: fixed;
   }
 */


/**
 * Settings.
 */

// This placeholder will be replaced with the breakpoint name
$mixin-breakpoint-name-placeholder: "{bp}";

@mixin generate-at-breakpoints($class, $breakpoint-names: ()) {

  $all-breakpoint-names: map-keys($breakpoints);

  @if $breakpoint-names == all {
    $breakpoint-names: $all-breakpoint-names;
  }

  @each $breakpoint-name in $breakpoint-names {

    $limit: "min";
    $joiner: "at";

    @if type-of($breakpoint-name) == list {
      $limit: nth($breakpoint-name, 2);
      $breakpoint-name: nth($breakpoint-name, 1);
    } @else {
      // Palm is a special case where it uses a `max-width` media query
      $limit: if($breakpoint-name == 'palm', 'max', 'min');
    }

    @if $limit == max {
      $joiner: "up-to";
    }

    @include respond-to($breakpoint-name, $limit) {
      $final-selector: "#{$class}-#{$joiner}-#{$breakpoint-name}";

      // Handle complex selectors by replacing a placeholder with the
      // breakpoint suffix
      @if str_index($class, $mixin-breakpoint-name-placeholder) != null {
        $final-selector: str-replace($class, $mixin-breakpoint-name-placeholder,
         "-#{$joiner}-#{$breakpoint-name}");
      }

      // Output a class which applies the style at a given breakpoint
      #{$final-selector} {
        @content;
      }
    }
  }
}