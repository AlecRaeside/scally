/* ======================================================================================
   @CORE -> MIXINS -> MEDIA QUERIES
   ====================================================================================== */

/**
 * Setup media queries for minimum and maximum widths/heights, with width being the default,
 * also includes the ability to apply ranges.
 *
 * N.B. learn more about CSS media queries:
 * https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries.
 *
 * @example
   @include respond-to(lap) {
     .foo {background: red;}
   }

   @include respond-to(500) {
     .foo {background: red;}
   }

   @include respond-to(palm, $limit: "max") {
     .foo {background: red;}
   }

   @include respond-to(500, $axis: "height") {
     .foo {background: red;}
   }

   @include respond-range(500, 780) {
     .foo {background: red;}
   }

   @include respond-range(lap) {
     .foo {background: red;}
   }
 */


/* Simple minimum and maximum width/height values
   ========================================================================== */

@mixin respond-to($value, $axis: "width", $limit: "min") {
  // If value is a named breakpoint
  @if type-of($value) == "string" {
    $value: map-get($breakpoints, $value);
  }
  @media (#{$limit}-#{$axis}: to-em($value)) {
    @content;
  }
}


/* Ranges
   ========================================================================== */

@mixin respond-range($min-value, $max-value: 0, $axis: "width") {
  // If min-value is a named breakpoint
  @if type-of($min-value) == "string" {
    $min-value: map-get($breakpoints, $min-value);

    // If max-value is omitted, use the next named breakpoint after the min-value breakpoint
    @if $max-value == 0 {
      $breakpoint-values: map-values($breakpoints);
      $breakpoint-index:index($breakpoint-values, $min-value);
      $max-value: nth($breakpoint-values, $breakpoint-index + 1);
    }
  }

  // If max-value is a named breakpoint
  @if type-of($max-value) == "string" {
    $max-value: map-get($breakpoints, $max-value);
  }

  @media (min-#{$axis}: to-em($min-value)) and (max-#{$axis}: to-em($max-value)) {
    @content;
  }
}