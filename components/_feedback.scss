/* ======================================================================================
   @MODULES -> FEEDBACK
   ====================================================================================== */

/*
  Provides appropriately designed UI feedback messages for users to acknowledge their actions and to orient users to their location in the site. Most common use case is for errors e.g. form validation errors. Read more here: http://styleguide.yahoo.com/writing/write-clear-user-interface-text/feedback-messages-and-error-messages.

  .feedback--error    - Error feedback
  .feedback--warning  - Warning feedback
  .feedback--success  - Success feedback
  .feedback--info     - Information feedback
  .feedback--block    - For when you need more than one paragraph of text
  .feedback--inline   - For when you don't require a background colour and padding.

  Styleguide Feedback
*/

.feedback {
	@include to-rem(padding, $spacing-quarter $spacing-half);

  &,
  a {color: $color-white;}

	a {
		text-decoration: underline;

		&:hover,
		&:focus {text-decoration: none;}
	}
}

/* Modifier: error */
.feedback--error {
  background-color: $color-error;

  /* Modifier: inline */
  &.feedback--inline {
    &,
    a {color: $color-error;}
  }
}

/* Modifier: warning */
.feedback--warning {
  background-color: $color-warning;

  /* Modifier: inline */
  &.feedback--inline {
    &,
    a {color: $color-warning;}
  }
}

/* Modifier: success */
.feedback--success {
  background-color: $color-success;

  /* Modifier: inline */
  &.feedback--inline {
    &,
    a {color: $color-success;}
  }
}

/* Modifier: info */
.feedback--info {
  background-color: $color-info;

  /* Modifier: inline */
  &.feedback--inline {
    &,
    a {color: $color-info;}
  }
}

/* Modifier: block */
.feedback--block {
  @extend %bottom-spacing;
  @include to-rem(padding-top padding-bottom, $spacing-half);

  .hn,
  p,
  .list {margin-bottom: 0;}

  p,
  .list {margin-top: to-rem($spacing-quarter);}
}

/* Modifier: inline */
.feedback--inline {
  background: none;
  padding: 0;
}

/*
  Usage: for highlighting text inputs for validation.

  Note: It is okay to use `!important` here as we're doing it preemptively i.e. you know you will always want the rule it's applied too to take precedence.
*/

/* Error */
.is-input-error {
  border-color: $color-error !important;
  background: lighten($color-error, 42%) !important;
  color: $color-error !important;

  &:focus {
    border-color: $color-error !important;
    box-shadow: 0 0 0 1px $color-error !important;
  }
}

/* Success */
.is-input-success {
  border-color: $color-success !important;
  background: lighten($color-success, 62%) !important;
  color: $color-success !important;

  &:focus {
    border-color: $color-success !important;
    box-shadow: 0 0 0 1px $color-success !important;
  }
}