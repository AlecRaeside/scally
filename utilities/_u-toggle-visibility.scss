/* ============================================================================
   @UTILITIES -> TOGGLE VISIBILITY
   ========================================================================= */


/**
 * Simply toggling the visibility of an element via a state class:
 * `is-visible` (or whatever you choose) which is powered by JavaScript.
 */


/**
 * Settings.
 */

// Apply at these breakpoints
$toggle-visibility-breakpoints: $default-utility-breakpoints !default;

// The state class that is powered by JavaScript
$toggle-visibility-state-class: is-visible !default;


/**
 * Base.
 */

%u-toggle-visibility,
.u-toggle-visibility {
  // Hide by default
  display: none;

  // Show via state class and for non-JavaScript
  &.#{$toggle-visibility-state-class},
  .no-js & {display: block;}
}

@include generate-at-breakpoints('.u-toggle-visibility',
  $toggle-visibility-breakpoints) {
  display: none;

  &.#{$toggle-visibility-state-class},
  .no-js & {display: block;}
}


/**
 * Modifier: for `inline` elements.
 */

%u-toggle-visibility--inline,
.u-toggle-visibility--inline {
  // Show via state class and for non-JavaScript
  &.#{$toggle-visibility-state-class},
  .no-js & {display: inline;}
}

@include generate-at-breakpoints('.u-toggle-visibility--inline',
  $toggle-visibility-breakpoints) {
  &.#{$toggle-visibility-state-class},
  .no-js & {display: inline;}
}


/**
 * Modifier: for `inline-block` elements.
 */

%u-toggle-visibility--inline-block,
.u-toggle-visibility--inline-block {
  // Show via state class and for non-JavaScript
  &.#{$toggle-visibility-state-class},
  .no-js & {display: inline-block;}
}

@include generate-at-breakpoints('.u-toggle-visibility--inline-block',
  $toggle-visibility-breakpoints) {
  &.#{$toggle-visibility-state-class},
  .no-js & {display: inline-block;}
}