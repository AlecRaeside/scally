@charset "UTF-8";
/* ======================================================================================
   @SCALLY CORE
   ====================================================================================== */
/**
 * N.B. this is all mandatory for the Scally framework.
 */
/**
 * Settings.
 */
/* ======================================================================================
   @CORE -> SETTINGS -> TYPOGRAPHY
   ====================================================================================== */
/**
 * Size.
 */
/**
 * Line height.
 */
/**
 * Line height ratio.
 */
/**
 * Families.
 */
/* ======================================================================================
   @CORE -> SETTINGS -> SPACING
   ====================================================================================== */
/**
 * Base.
 */
/**
 * Decrease from base.
 */
/**
 * Increase from base.
 */
/* ======================================================================================
   @CORE -> SETTINGS -> TOGGLES
   ====================================================================================== */
/**
 * Switch things on or off.
 */
/**
 * Debug.
 */
/**
 * Reset the `box-sizing` property to the more friendly `border-box` value.
 *
 * N.B. it is turned on by default as the grid relies on this. If you turn it off then the grid
 * 'out of the box' will break and possibly other things. So it's our recommendation to keep it
 * on :)
 */
/**
 * Grid.
 */
/**
 * Heading margins.
 */
/**
 * Forms.
 */
/**
 * Apply device width viewport.
 */
/**
 * Apply classes at specific breakpoints.
 */
/* ======================================================================================
   @CORE -> SETTINGS -> BREAKPOINTS
   ====================================================================================== */
/**
 * Here we set breakpoints. Not every media query will be able to use one of these breakpoints and
 * that's fine as they're no magic numbers with breakpoints i.e. if the UI needs to change then it
 * needs to change. But most of the time we can use them.
 *
 * The breakdown of the breakpoints is based off this chart:
 * http://static.lukew.com/unified_device_design.png
 *
 * Here's the thinking:
 *
 * - Palm: smartphones and featurephones i.e. anything that can fit into the palm of a hand.
 * - Lap: typically tablets, notebooks and laptops i.e. anything that is portable that doesn't
 *   include phones.
 * - Lap small: smaller tablets/notebooks and e-readers e.g. Kindle.
 * - Lap large: larger tablets and laptops.
 * - Desk: desktop computers, TV's, etc. i.e. anything that is not portable.
 * - Desk small: smaller desktop computer monitors.
 * - Desk large: larger desktop computer monitors, TV's, and who knows what else?
 *
 * The breakpoints:
 *
 * - Palm:         0 - 640px
 *
 * - Lap:          641px +
 * - Lap large:    901px +
 *
 * - Desk:         1200px +
 * - Desk large:   1366px +
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/aLDdb
 *
 * @credit
 * - http://www.lukew.com/ff/entry.asp?1679
 * - https://developers.google.com/webmasters/smartphone-sites/details?hl=en
 */
/* ======================================================================================
   @CORE -> SETTINGS -> LAYOUT
   ====================================================================================== */
/**
 * Containers.
 */
/**
 * Grid.
 */
/**
 * Widths.
 */
/* ======================================================================================
   @CORE -> SETTINGS -> COLOURS
   ====================================================================================== */
/**
 * @credit
 * http://ethanschoonover.com/solarized
 */
/**
 * Brand.
 */
/**
 * Black.
 */
/**
 * White.
 */
/**
 * Text.
 */
/**
 * `html` element background.
 */
/**
 * Buttons.
 */
/**
 * Links.
 */
/**
 * States.
 */
/**
 * Forms.
 */
/* ======================================================================================
   @CORE -> SETTINGS -> POSITIONING
   ====================================================================================== */
/**
 * `z-index` values.
 *
 * A nice way to maintain `z-index` order. Visit here for the full details of this technique:
 * http://www.smashingmagazine.com/2014/06/12/sassy-z-index-management-for-complex-layouts/
 *
 * @credit
 * http://www.smashingmagazine.com/2014/06/12/sassy-z-index-management-for-complex-layouts/
 */
/**
 * Off-screen distance.
 */
/* ======================================================================================
   @CORE -> SETTINGS -> COSMETICS
   ====================================================================================== */
/**
 * Disabled state opacity strength.
 */
/**
 * Border radius.
 */
/**
 * Functions.
 */
/* ======================================================================================
   @CORE -> FUNCTIONS -> CONVERT PX TO EM/REM
   ====================================================================================== */
/**
 * To convert `px` to `em`s or `rem`s.
 *
 * @credit
 * https://gist.github.com/2237465
 *
 * @example
   .foo {margin-left: to-em(8, 20);}
   .foo {padding: to-rem(8) 0;}
 *
 */
/**
 * `em`.
 */
/**
 * `rem`.
 */
/* ======================================================================================
   @CORE -> FUNCTIONS -> MATH HELPERS
   ====================================================================================== */
/**
 * A few maths helpers mainly used for halving and doubling numbers, returning rounded integers.
 *
 * @example
   .foo {padding: halve(3.2px);}
 */
/**
 * Quarter.
 */
/**
 * Third.
 */
/**
 * Halve.
 */
/**
 * Double.
 */
/**
 * Triple.
 */
/**
 * Quadruple.
 */
/**
 * Mixins.
 */
/* ======================================================================================
   @CORE -> MIXINS -> CONVERT PX TO EM/REM
   ====================================================================================== */
/**
 * Convert `px` to `em`'s or `rem`'s for multiple properties or values or both. Accepts a list of
 * lists (instead a list of values) for properties that accept multiple lists of values. Only
 * numbers are converted; everything else is passed through. For the `to-em` `@mixin` `$context` is
 * an optional argument that allows making measurements relative to the parent font size rather than
 * the current.
 *
 * @example
   @include to-em(line-height, 30)
   @include to-rem(line-height, 30)
   @include to-em(width height, 125);
   @include to-rem(padding, 0 25);
   @include to-em(text-shadow, (#0d6e28 1 1) (#777 0 0 2), 16);
   @include to-rem(box-shadow, (inset 0 0 0 1 #2a9022) (inset 0 0 3 #459966));
   @include to-em(padding margin, $spacing-base, $sledgehammer: !important);
   @include to-rem(margin, $spacing-base, !important);
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/Bcfyz
 *
 * @credit
 * https://gist.github.com/2237465
 */
/**
 * `em`.
 */
/**
 * `rem`.
 */
/* ======================================================================================
   @CORE -> MIXINS -> FONT SIZE
   ====================================================================================== */
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a single value, e.g.:
 *
   .foo {@include font-size(12);}
 *
 * This will generate a rem-based font-size, as well as a unitless line-height which will place the
 * element on your baseline, e.g.:
 *
  .foo {
    font-size: 0.75rem;
    line-height: 2;
  }
 *
 * If you do not want Scally to generate you a line-height automatically, you simply pass in your
 * own as a second paramater:
 *
  .foo {@include font-size(12, 1.5);}
 *
 * This will yield:
 *
  .foo {
    font-size: 0.75rem;
    line-height: 1.5;
  }
 *
 * This parameter can be any integer, ‘inherit’, or ‘normal’. If you don’t want a line-height at all,
 * pass in a second paramater of ‘none’ or ‘false’:
 *
  .foo {@include font-size(12, none);}
 *
 * This will yield:
 *
  .foo {font-size: 0.75rem;}
 *
 * @example
   @include font-size(18);
   @include font-size(12, 1.5);
   @include font-size(12, none);
   @include font-size(24, inherit);
   @include font-size(24, normal);
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/Bcfyz
 *
 * @credit
 * https://github.com/inuitcss/tools.mixins/blob/master/_tools.mixins.scss
 */
/* ======================================================================================
   @CORE -> MIXINS -> GRADIENTS
   ====================================================================================== */
/**
 * Some simple gradients.
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/Bcfyz
 */
/**
 * Linear gradient accepting two colours, directional keywords (default direction is `bottom`), and
 * an optional IE 9 fallback.
 *
 * @example
   @include linear-gradient(blue, red);
   @include linear-gradient(blue, red, left);
   @include linear-gradient(blue, red, top left);
   @include linear-gradient(blue, red, top right);
   @include linear-gradient(blue, red, bottom left);
   @include linear-gradient(blue, red, bottom right);
   @include linear-gradient(blue, red, top, true);
 */
/**
 * Radial gradient accepting two colours.
 *
 * @example
   @include radial-gradient(blue, red);
 */
/* ======================================================================================
   @CORE -> MIXINS -> MEDIA QUERIES
   ====================================================================================== */
/**
 * Setup media queries for minimum and maximum widths/heights, with width being the default,
 * also includes the ability to apply ranges.
 *
 * N.B. learn more about CSS media queries:
 * https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries.
 *
 * @example
   @include respond-min($lap) {
     .foo {background: red;}
   }

   @include respond-min($lap, true) {
     .foo {background: red;}
   }

   @include respond-max($palm-end) {
     .foo {background: red;}
   }

   @include respond-range(500, 780) {
     .foo {background: red;}
   }

   @include respond-range-fixed(lap-lrg) {
     .foo {background: red;}
   }
 */
/* Simple minimum and maximum width/height values
   ========================================================================== */
/**
 * Minimum
 */
/**
 * Maximum
 */
/* Ranges
   ========================================================================== */
/**
 * Using the `and` logical operator.
 *
 * N.B. the media query will only apply when both arguments are true.
 */
/**
 * Grouped (comma-seperated).
 *
 * N.B. the media query will apply if any of the arguments are true.
 */
/**
 * Fixed width ranges using the predefined breakpoints
 */
/* ======================================================================================
   @CORE -> MIXINS -> RETINA BACKGROUND IMAGE
   ====================================================================================== */
/**
 * Creates a retina background image.
 *
 * @example
   .foo {
      background: url("logo.png") no-repeat;
      @include retina-bg-image("logo@2x.png", 100px, 25px);
    }
  *
  * @demo
  * http://codepen.io/team/westfieldlabs/full/Bcfyz
  *
  * @credit
  * http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
 */
/* ======================================================================================
   @CORE -> MIXINS -> TARGET BROWSERS
   ====================================================================================== */
/**
 * Target specific browsers.
 *
 * N.B. these mixins should be avoided as it's not good to target styles for different browsers.
 * And the Mozilla mixin cannot be nested in a style declaration like the others, it has to exist
 * by itself.
 *
 * @example
   @include target-webkit {
     .foo {background: blue;}
   }

   @include target-mozilla {
     .foo {background: red;}
   }

   @include target-IE10-and-up {
     .foo {background: orange;}
   }
  *
  * @demo
  * http://codepen.io/team/westfieldlabs/full/Bcfyz
 */
/**
 * Webkit.
 */
/**
 * Mozilla.
 */
/**
 * IE 10 and up.
 */
/* ======================================================================================
   @CORE -> MIXINS -> TARGET HEADINGS
   ====================================================================================== */
/**
 * Style any number of headings in one fell swoop, supports double stranded headings.
 *
 * @example
   .foo {
     @include headings(1, 3) {
      color: red;
     }
    }
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/Bcfyz
 *
 * @credit
 * https://github.com/csswizardry/inuit.css/blob/master/generic/_mixins.scss
 */
/**
 * Normalize.
 */
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
*/
[hidden],
template {
  display: none; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
* Remove the gray background color from active links in IE 10.
*/
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/**
 * Reset.
 */
/* ======================================================================================
   @CORE -> RESET
   ====================================================================================== */
/**
 * In addition to normalize.css we also apply a reset which mainly removes all margins, paddings,
 * and borders, from all elements, and applies the nice `border-box` value for `box-sizing`. And a
 * few other things.
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/wGvdp
 */
/**
 * Remove all margins, paddings, and borders.
 *
 * N.B. the complete list of HTML5 elements
 * https://developer.mozilla.org/en/docs/Web/Guide/HTML/HTML5/HTML5_element_list
 */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strong,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
sub,
sup,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
time,
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary,
main {
  margin: 0;
  padding: 0;
  border: 0; }

/**
 * Reset the `box-sizing` property to the more friendly `border-box` value.
 *
 * N.B. it is turned on by default as the grid relies on this. If you turn it off then the grid
 * 'out of the box' will break and possibly other things. So it's our recommendation to keep it
 * on :)
 *
 * @credit
 * http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/**
 * Reset lists.
 */
ul,
ol {
  list-style: none; }

/**
 * Suppress the focus outline on links that cannot be accessed via a keyboard. This prevents an
 * unwanted focus outline from appearing around elements that might still respond to pointer events.
 *
 * N.B. it is okay to use `!important` here as we're doing it preemptively i.e. you know you will
 * always want the rule it's applied too to take precedence.
 *
 * @credit
 * https://github.com/suitcss/
 */
[tabindex="-1"]:focus {
  outline: none !important; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 0.0625rem solid ; }

/**
 * Debug.
 */
/**
 * Base.
 */
/* ======================================================================================
   @CORE -> BASE -> ROOT
   ====================================================================================== */
/**
 * The root element: `html`.
 *
 * 1. Set the default `font-size`, `line-height` and `font-family` for the entire project, sourced
 *    from our default settings (variables). The `font-size` is calculated to exist in `em`s, the
 *    `line-height` is calculated to exist unitlessly.
 * 2. Fonts on OSX will look more consistent with other systems that do not render text using
 *    sub-pixel anti-aliasing.
 */
html {
  font: 1em/1.5 Arial, sans-serif;
  color: #000;
  background: #fff;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

/* ======================================================================================
   @CORE -> BASE -> ABBREVIATION
   ====================================================================================== */
abbr[title] {
  cursor: help; }

/* ======================================================================================
   @CORE -> BASE -> FORMS
   ====================================================================================== */
/**
 * Indicate that `label` will shift focus to the associated `input` element.
 */
label,
.faux-label {
  cursor: pointer; }

/**
 * Disable `textarea`s from being resized horizontally.
 */
textarea {
  resize: vertical; }

/**
 * Override `content-box` from normalize.css for search inputs.
 */
input[type="search"] {
  box-sizing: border-box; }

/**
 * Remove rounded corners from iOS search inputs by overriding `appearance: textfield` from
 * normalize.css. See: https://github.com/necolas/normalize.css/issues/360.
 */
input[type="search"] {
  appearance: none; }

/**
 * Fix for IE and old versions of some other browsers not wrapping text within a `legend`.
 *
 * 1. Enable line-wrapping in IE8+.
 * 2. Enable line-wrapping in old versions of some other browsers.
 *
 * @credit
 * http://www.456bereastreet.com/archive/201210/how_to_line_wrap_text_in_legend_elements_even_in_ie/
 */
legend {
  display: table;
  white-space: normal; }

/**
 * Set whitespace for `legend`s via a class, we use `padding` over `margin` as `padding` is the most
 * cross-browser compatible for `legend`s.
 */
.form-heading {
  padding-bottom: 1.5rem ; }

/**
 * Disabled state.
 *
 * N.B. it is okay to use `!important` here as we're doing it preemptively i.e. you know you will
 * always want the rule it's applied too to take precedence.
 */
button[disabled],
input[disabled],
select[disabled],
textarea[disabled],
.is-disabled {
  cursor: not-allowed !important;
  text-shadow: none !important;
  box-shadow: none !important;
  opacity: 0.6 !important; }

.is-disabled--no-hover {
  cursor: inherit !important;
  color: inherit !important;
  background: inherit !important;
  text-decoration: none !important; }

/**
 * Required field indicator (asterisk).
 */
.required-field {
  color: #dc322f;
  cursor: help; }

/**
 * Text inputs via the `.text-input` class, `textarea`s, and `select` lists.
 */
.text-input,
textarea,
select {
  padding: 0.375rem ;
  color: #000;
  border-radius: 0.25rem ;
  border: 0.0625rem solid #4d4d4d ;
  background: #fff; }

/**
 * Remove the top inner shadow from iOS inputs.
 *
 * N.B. this needs to be isolated to iOS devices so user-agent sniffing needs to happen and the most
 * robust implementation of this is to apply the hook to the `html` element e.g. `.ios`.
 */
/**
 * Hide the close button generated by IE 10+ for inputs.
 */
/* ======================================================================================
   @CORE -> BASE -> HEADINGS
   ====================================================================================== */
/**
 * Double stranded for greater reuse.
 */
/**
 * Set margins but make optional.
 */
/**
 * H1.
 */
h1, .h1 {
  font-size: 2.25rem;
  line-height: 1.33333;
  margin-top: 0; }

/**
 * H2.
 */
h2, .h2 {
  font-size: 1.875rem;
  line-height: 1.6; }

/**
 * H3.
 */
h3, .h3 {
  font-size: 1.5rem;
  line-height: 1; }

/**
 * H4.
 */
h4, .h4 {
  font-size: 1.25rem;
  line-height: 1.2; }

/**
 * H5.
 */
h5, .h5 {
  font-size: 1rem;
  line-height: 1.5; }

/**
 * H6.
 */
h6, .h6 {
  font-size: 0.875rem;
  line-height: 1.71429; }

/* ======================================================================================
   @CORE -> BASE -> HORIZONTAL RULE
   ====================================================================================== */
/**
 * @credit
 * http://html5boilerplate.com/
 */
hr {
  display: block;
  border: 0;
  border: 0.0625rem solid #000 ;
  padding: 0; }

/* ======================================================================================
   @CORE -> BASE -> LINKS
   ====================================================================================== */
a {
  color: #2aa198;
  text-decoration: none; }
  a:hover, a:focus {
    color: #1f7972;
    text-decoration: underline; }

/* ======================================================================================
   @CORE -> BASE -> MEDIA
   ====================================================================================== */
/**
 * Remove the gap between media elements and the bottom of their containers.
 *
 * @credit
 * http://html5boilerplate.com/
 */
audio,
canvas,
img,
svg,
video {
  vertical-align: middle; }

/**
 * Images.
 *
 * 1. Make responsive.
 * 2. So that `alt` text is visually offset if images don't load.
 */
img {
  max-width: 100%;
  height: auto;
  font-style: italic;
  /**
   * Non-responsive images if you specify `width` and/or `height` attributes and Google Maps breaks
   * if `max-width: 100%` acts upon it; use their selector to remove the effects.
   */ }
  .gm-style img, img[width], img[height] {
    max-width: none; }

/**
 * Set the default behavior for touch-based browsing in IE 10 on devices running Windows 8.
 */
canvas {
  -ms-touch-action: double-tap-zoom; }

/* ======================================================================================
   @CORE -> BASE -> PARAGRAPHS
   ====================================================================================== */
/* ======================================================================================
   @CORE -> BASE -> PRINT
   ====================================================================================== */
/**
 * All print styles outside of 'Core -> Base' live in context with their corresponding rule sets.
 *
 * N.B. it is okay to use `!important` here as we're doing it preemptively i.e. you know you will
 * always want the rule it's applied too to take precedence.
 *
 * @credit
 * http://html5boilerplate.com/
*/
@media print {
  /**
   * Apply print friendly styles to ALL elements.
   */
  * {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important; }

  /**
   * Hide elements not really useful on a piece of paper.
   */
  nav,
  video,
  audio {
    display: none !important; }

  /**
   * Ensure ALL images are responsive.
   */
  img {
    max-width: 100% !important; }

  /**
   * Make links always stand out.
   */
  a, a:visited {
    text-decoration: underline !important; }

  /**
   * Show the `href` and `title` attribute values of links and abbreviations in a pseudo element.
   */
  a[href]:after {
    content: " (" attr(href) ")"; }

  abbr[title]:after {
    content: " (" attr(title) ")"; }

  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }

  /**
   * h5bp.com/t
   */
  thead {
    display: table-header-group; }

  /**
   * Set page breaks, orphans and widows.
   */
  h2
  h3 {
    page-break-after: avoid; }

  tr,
  img,
  pre,
  blockquote {
    page-break-inside: avoid; }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; } }
/* ======================================================================================
   @CORE -> BASE -> VIEWPORT
   ====================================================================================== */
/**
 * Add optional `@viewport` rule to future proof.
 *
 * N.B. leave out `-ms-` prefix, see here:
 * http://nostrongbeliefs.com/why-i-think-we-shouldnt-use-css-viewport-in-ie10-for-now/
 */
@-webkit-viewport {
  width: device-width; }
@-moz-viewport {
  width: device-width; }
@-o-viewport {
  width: device-width; }
@viewport {
  width: device-width; }
/**
 * Placeholders.
 *
 * N.B. the placeholders in utilities are the frameworks defaults however because we don't want
 * utilities as a framework dependency we have to have separate placeholders for the core.
 * All these placeholders need to be prefixed with `core-`.
 */
/* ======================================================================================
   @CORE -> PLACEHOLDERS -> BOTTOM SPACING
   ====================================================================================== */
/**
 * Applies bottom spacing in order to try to keep a consistent vertical rhythm.
 */
/**
 * Base.
 */
h1, .h1,
h2, .h2,
h3, .h3, hr, p {
  margin-bottom: 1.5rem ; }

/**
 * Half.
 */
h4, .h4,
h5, .h5,
h6, .h6 {
  margin-bottom: 0.75rem ; }

h1:last-child, .h1:last-child,
h2:last-child, .h2:last-child,
h3:last-child, .h3:last-child, hr:last-child, p:last-child,
h4:last-child,
.h4:last-child,
h5:last-child,
.h5:last-child,
h6:last-child,
.h6:last-child {
  margin-bottom: 0; }

/*# sourceMappingURL=style.sss.map */
